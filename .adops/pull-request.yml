trigger: none
pr:
  - main
  - dev
  - feature/localization #TODO: Remove when it is time to merge this branch into dev
pool:
  vmImage: 'ubuntu-latest'
  demands: project_navy

variables:
  YARN_CACHE_FOLDER: /home/vsts/.yarn/berry/cache
  NODE_OPTIONS: --max-old-space-size=15000

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
        yarn
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages

  - script: yarn install --immutable
    displayName: Install dependencies

  - script: yarn build
    displayName: Build

  - script: yarn apply-templates
    displayName: Apply template files

  - script: |
      sed -i 's/^\(TENANT_ID=\)$/\100000000-0000-0000-0000-000000000000/' .env
      sed -i 's/^\(ENVIRONMENT_ID=\)$/\100000000-0000-0000-0000-000000000000/' .env
      sed -i 's/^\(RABBITMQ_VHOST=\)$/\1fake/' .env
      sed -i 's/^\(RABBITMQ_USER=\)$/\1fake/' .env
      sed -i 's/^\(RABBITMQ_PASSWORD=\)$/\1fake/' .env
      sed -i 's/^\(DEV_SERVICE_ACCOUNT_CLIENT_ID=\)$/\1fake/' .env
      sed -i 's/^\(DEV_SERVICE_ACCOUNT_CLIENT_SECRET=\)$/\1fake/' .env
      sed -i '/POSTGRESQL_HOST/d' .env
      sed -i '/POSTGRESQL_ROOT/d' .env
      echo -e "\nPOSTGRESQL_HOST=$(DATABASE_HOST)" >> .env
      echo "POSTGRESQL_ROOT=$(DATABASE_USERNAME)" >> .env
      echo "POSTGRESQL_ROOT_PASSWORD=$(DATABASE_PASSWORD)" >> .env
    displayName: Add fake values to .env to keep config loader happy

  - script: cat .env
    displayName: Show .env

  - script: yarn test:reset:dbs
    displayName: Reset test DBs

  - script: env && yarn test:ci
    displayName: Run tests
    env:
      NODE_OPTIONS: $(NODE_OPTIONS)

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Navy Unit Tests'
    condition: always()
    displayName: 'Publish test results'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '**/coverage/cobertura-coverage.xml'
    condition: always()
    displayName: 'Publish coverage reports'
