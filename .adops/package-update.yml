trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'
  demands: project_navy

resources:
  pipelines:
    - pipeline: packageRelease
      source: 'Package release'
      trigger:
        branches:
          include:
            - master
        stages:
          - Prerelease

variables:
  # This is Yarn 1, it has different cache behaviour than Yarn 2/3!!!
  - name: YARN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.yarn
  - name: buildSourceBranch
    value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]

steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - script: git checkout $(buildSourceBranch)
    displayName: 'Check out $(buildSourceBranch)'
    condition:
      and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))

  - script: |
      git config user.email "no-email@axinom.com"
      git config user.name "Mosaic CI"
    displayName: Set git identity

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
        yarn
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages

  - script: yarn install --immutable
    displayName: Install dependencies

  - script: yarn util:update-mosaic-packages -- prerelease
    displayName: Update Mosaic packages

  - script: yarn build
    displayName: Build

  - script: yarn apply-templates
    displayName: Apply template files

  - script: |
      sed -i 's/^\(TENANT_ID=\)$/\100000000-0000-0000-0000-000000000000/' .env
      sed -i 's/^\(ENVIRONMENT_ID=\)$/\100000000-0000-0000-0000-000000000000/' .env
      sed -i 's/^\(RABBITMQ_VHOST=\)$/\1fake/' .env
      sed -i 's/^\(RABBITMQ_USER=\)$/\1fake/' .env
      sed -i 's/^\(RABBITMQ_PASSWORD=\)$/\1fake/' .env
      sed -i 's/^\(DEV_SERVICE_ACCOUNT_CLIENT_ID=\)$/\1fake/' .env
      sed -i 's/^\(DEV_SERVICE_ACCOUNT_CLIENT_SECRET=\)$/\1fake/' .env
    displayName: Add fake values to .env to keep config loader happy

  - task: Docker@0
    inputs:
      action: 'Run an image'
      imageName: 'postgres:11.12-alpine'
      containerName: 'test-postgres'
      ports: '5432:5432'
      volumes: '$(Agent.TempDirectory):/var/lib/postgresql/data'
      envVars: |
        PGDATA=/var/lib/postgresql/data/pgdata
        POSTGRES_USER=postgres
        POSTGRES_PASSWORD=postgres
      restartPolicy: 'no'
    displayName: Spin up temporary Postgres DB

  - script: yarn test:reset:dbs
    displayName: Reset test DBs

  - script: yarn test:ci
    displayName: Run tests

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      testRunTitle: 'Navy Unit Tests'
    condition: always()
    displayName: 'Publish test results'

  - script: |
      git add .
      git commit -m "chore: bumped Mosaic packages [skip ci]"
      git push
    displayName: Commit and push updated packages

  - script: |
      git config --unset user.email
      git config --unset user.name
    displayName: Unset git identity
    condition: always()

  - task: Docker@0
    inputs:
      action: 'Run a Docker command'
      customCommand: 'stop test-postgres'
    condition: always()
    displayName: 'Stop temp Postgres container'

  - task: Docker@0
    inputs:
      action: 'Run a Docker command'
      customCommand: 'container rm test-postgres'
    condition: always()
    displayName: 'Delete temp Postgres container'
