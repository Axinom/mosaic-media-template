/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos (v3.6.0), and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';
  import type * as c from 'zapatos/custom';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 101 }

  /* === schema: app_hidden === */

  /* --- enums --- */


  /* --- tables --- */



  /* === schema: app_private === */

  /* --- enums --- */


  /* --- tables --- */

  export namespace messaging_counter {
    export type Table = 'messaging_counter';
    export interface Selectable {
      /**
      * **messaging_counter.key**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      key: string;
      /**
      * **messaging_counter.counter**
      * - `int4` in database
      * - Nullable, default: `1`
      */
      counter: number | null;
      /**
      * **messaging_counter.expiration_date**
      * - `timestamptz` in database
      * - `NOT NULL`, default: `timezone('utc'::text, (now() + '1 day'::interval))`
      */
      expiration_date: Date;
    }
    export interface JSONSelectable {
      /**
      * **messaging_counter.key**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      key: string;
      /**
      * **messaging_counter.counter**
      * - `int4` in database
      * - Nullable, default: `1`
      */
      counter: number | null;
      /**
      * **messaging_counter.expiration_date**
      * - `timestamptz` in database
      * - `NOT NULL`, default: `timezone('utc'::text, (now() + '1 day'::interval))`
      */
      expiration_date: db.DateString;
    }
    export interface Whereable {
      /**
      * **messaging_counter.key**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      key?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_counter.counter**
      * - `int4` in database
      * - Nullable, default: `1`
      */
      counter?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messaging_counter.expiration_date**
      * - `timestamptz` in database
      * - `NOT NULL`, default: `timezone('utc'::text, (now() + '1 day'::interval))`
      */
      expiration_date?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **messaging_counter.key**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      key: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messaging_counter.counter**
      * - `int4` in database
      * - Nullable, default: `1`
      */
      counter?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messaging_counter.expiration_date**
      * - `timestamptz` in database
      * - `NOT NULL`, default: `timezone('utc'::text, (now() + '1 day'::interval))`
      */
      expiration_date?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **messaging_counter.key**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      key?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messaging_counter.counter**
      * - `int4` in database
      * - Nullable, default: `1`
      */
      counter?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messaging_counter.expiration_date**
      * - `timestamptz` in database
      * - `NOT NULL`, default: `timezone('utc'::text, (now() + '1 day'::interval))`
      */
      expiration_date?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'messaging_counter_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }


  /* === schema: app_public === */

  /* --- enums --- */


  /* --- tables --- */

  export namespace collection {
    export type Table = 'collection';
    export interface Selectable {
      /**
      * **collection.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **collection.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **collection.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **collection.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **collection.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface JSONSelectable {
      /**
      * **collection.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **collection.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **collection.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **collection.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **collection.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface Whereable {
      /**
      * **collection.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **collection.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **collection.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **collection.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **collection.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'collection_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace collection_images {
    export type Table = 'collection_images';
    export interface Selectable {
      /**
      * **collection_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **collection_images.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id: string | null;
      /**
      * **collection_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **collection_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **collection_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **collection_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface JSONSelectable {
      /**
      * **collection_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **collection_images.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id: string | null;
      /**
      * **collection_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **collection_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **collection_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **collection_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface Whereable {
      /**
      * **collection_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_images.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **collection_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **collection_images.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **collection_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_images.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'collection_images_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace collection_items_relation {
    export type Table = 'collection_items_relation';
    export interface Selectable {
      /**
      * **collection_items_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **collection_items_relation.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id: string | null;
      /**
      * **collection_items_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **collection_items_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **collection_items_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **collection_items_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **collection_items_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
      /**
      * **collection_items_relation.relation_type**
      * - `text` in database
      * - Nullable, no default
      */
      relation_type: string | null;
    }
    export interface JSONSelectable {
      /**
      * **collection_items_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **collection_items_relation.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id: string | null;
      /**
      * **collection_items_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **collection_items_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **collection_items_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **collection_items_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **collection_items_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
      /**
      * **collection_items_relation.relation_type**
      * - `text` in database
      * - Nullable, no default
      */
      relation_type: string | null;
    }
    export interface Whereable {
      /**
      * **collection_items_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **collection_items_relation.relation_type**
      * - `text` in database
      * - Nullable, no default
      */
      relation_type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **collection_items_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **collection_items_relation.relation_type**
      * - `text` in database
      * - Nullable, no default
      */
      relation_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **collection_items_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.collection_id**
      * - `text` in database
      * - Nullable, no default
      */
      collection_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **collection_items_relation.relation_type**
      * - `text` in database
      * - Nullable, no default
      */
      relation_type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'collection_items_relation_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode {
    export type Table = 'episode';
    export interface Selectable {
      /**
      * **episode.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **episode.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **episode.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index: number | null;
      /**
      * **episode.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **episode.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **episode.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **episode.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **episode.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **episode.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: Date | null;
      /**
      * **episode.episode_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      episode_cast: string[] | null;
      /**
      * **episode.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
      /**
      * **episode.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
    }
    export interface JSONSelectable {
      /**
      * **episode.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **episode.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **episode.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index: number | null;
      /**
      * **episode.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **episode.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **episode.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **episode.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **episode.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **episode.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: db.DateString | null;
      /**
      * **episode.episode_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      episode_cast: string[] | null;
      /**
      * **episode.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
      /**
      * **episode.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
    }
    export interface Whereable {
      /**
      * **episode.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.episode_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      episode_cast?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **episode.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.episode_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      episode_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **episode.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.episode_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      episode_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode_genres_relation {
    export type Table = 'episode_genres_relation';
    export interface Selectable {
      /**
      * **episode_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_genres_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **episode_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface JSONSelectable {
      /**
      * **episode_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_genres_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **episode_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface Whereable {
      /**
      * **episode_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_genres_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **episode_genres_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_genres_relation.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_genres_relation_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode_images {
    export type Table = 'episode_images';
    export interface Selectable {
      /**
      * **episode_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_images.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **episode_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **episode_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **episode_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface JSONSelectable {
      /**
      * **episode_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_images.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **episode_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **episode_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **episode_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface Whereable {
      /**
      * **episode_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_images.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **episode_images.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_images.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_images_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode_licenses {
    export type Table = 'episode_licenses';
    export interface Selectable {
      /**
      * **episode_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_licenses.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **episode_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: Date | null;
      /**
      * **episode_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: Date | null;
    }
    export interface JSONSelectable {
      /**
      * **episode_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_licenses.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **episode_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: db.DateString | null;
      /**
      * **episode_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: db.DateString | null;
    }
    export interface Whereable {
      /**
      * **episode_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_licenses.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **episode_licenses.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_licenses.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_licenses_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode_video_streams {
    export type Table = 'episode_video_streams';
    export interface Selectable {
      /**
      * **episode_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_video_streams.episode_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      episode_video_id: number | null;
      /**
      * **episode_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **episode_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **episode_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **episode_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **episode_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **episode_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **episode_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **episode_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **episode_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **episode_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **episode_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **episode_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **episode_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **episode_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **episode_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **episode_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **episode_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface JSONSelectable {
      /**
      * **episode_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_video_streams.episode_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      episode_video_id: number | null;
      /**
      * **episode_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **episode_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **episode_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **episode_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **episode_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **episode_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **episode_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **episode_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **episode_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **episode_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **episode_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **episode_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **episode_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **episode_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **episode_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **episode_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **episode_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface Whereable {
      /**
      * **episode_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.episode_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      episode_video_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.episode_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      episode_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.episode_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      episode_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_video_streams_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace episode_videos {
    export type Table = 'episode_videos';
    export interface Selectable {
      /**
      * **episode_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_videos.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **episode_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **episode_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **episode_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **episode_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **episode_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **episode_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **episode_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **episode_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **episode_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface JSONSelectable {
      /**
      * **episode_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **episode_videos.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id: string | null;
      /**
      * **episode_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **episode_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **episode_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **episode_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **episode_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **episode_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **episode_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **episode_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **episode_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **episode_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface Whereable {
      /**
      * **episode_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **episode_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **episode_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **episode_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **episode_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.episode_id**
      * - `text` in database
      * - Nullable, no default
      */
      episode_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **episode_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'episode_videos_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie {
    export type Table = 'movie';
    export interface Selectable {
      /**
      * **movie.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **movie.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **movie.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **movie.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **movie.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **movie.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: Date | null;
      /**
      * **movie.movie_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      movie_cast: string[] | null;
      /**
      * **movie.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **movie.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface JSONSelectable {
      /**
      * **movie.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **movie.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **movie.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **movie.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **movie.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **movie.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: db.DateString | null;
      /**
      * **movie.movie_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      movie_cast: string[] | null;
      /**
      * **movie.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **movie.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface Whereable {
      /**
      * **movie.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.movie_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      movie_cast?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **movie.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.movie_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      movie_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **movie.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.movie_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      movie_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_genre {
    export type Table = 'movie_genre';
    export interface Selectable {
      /**
      * **movie_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **movie_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no: number | null;
    }
    export interface JSONSelectable {
      /**
      * **movie_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **movie_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no: number | null;
    }
    export interface Whereable {
      /**
      * **movie_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **movie_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **movie_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_genre_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_genres_relation {
    export type Table = 'movie_genres_relation';
    export interface Selectable {
      /**
      * **movie_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_genres_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_genres_relation.movie_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_genre_id: string | null;
      /**
      * **movie_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface JSONSelectable {
      /**
      * **movie_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_genres_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_genres_relation.movie_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_genre_id: string | null;
      /**
      * **movie_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface Whereable {
      /**
      * **movie_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_genres_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_genres_relation.movie_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_genre_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **movie_genres_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_genres_relation.movie_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_genres_relation.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_genres_relation.movie_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_genres_relation_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_images {
    export type Table = 'movie_images';
    export interface Selectable {
      /**
      * **movie_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_images.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **movie_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **movie_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **movie_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface JSONSelectable {
      /**
      * **movie_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_images.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **movie_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **movie_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **movie_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface Whereable {
      /**
      * **movie_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_images.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **movie_images.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_images.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_images_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_licenses {
    export type Table = 'movie_licenses';
    export interface Selectable {
      /**
      * **movie_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_licenses.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **movie_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: Date | null;
      /**
      * **movie_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: Date | null;
    }
    export interface JSONSelectable {
      /**
      * **movie_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_licenses.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **movie_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: db.DateString | null;
      /**
      * **movie_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: db.DateString | null;
    }
    export interface Whereable {
      /**
      * **movie_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_licenses.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **movie_licenses.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_licenses.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_licenses_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_video_streams {
    export type Table = 'movie_video_streams';
    export interface Selectable {
      /**
      * **movie_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_video_streams.movie_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      movie_video_id: number | null;
      /**
      * **movie_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **movie_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **movie_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **movie_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **movie_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **movie_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **movie_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **movie_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **movie_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **movie_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **movie_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **movie_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **movie_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **movie_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **movie_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **movie_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **movie_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface JSONSelectable {
      /**
      * **movie_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_video_streams.movie_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      movie_video_id: number | null;
      /**
      * **movie_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **movie_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **movie_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **movie_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **movie_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **movie_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **movie_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **movie_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **movie_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **movie_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **movie_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **movie_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **movie_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **movie_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **movie_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **movie_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **movie_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface Whereable {
      /**
      * **movie_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.movie_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      movie_video_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.movie_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      movie_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.movie_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      movie_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_video_streams_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace movie_videos {
    export type Table = 'movie_videos';
    export interface Selectable {
      /**
      * **movie_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_videos.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **movie_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **movie_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **movie_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **movie_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **movie_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **movie_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **movie_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **movie_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface JSONSelectable {
      /**
      * **movie_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **movie_videos.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id: string | null;
      /**
      * **movie_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **movie_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **movie_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **movie_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **movie_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **movie_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **movie_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **movie_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **movie_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **movie_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface Whereable {
      /**
      * **movie_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **movie_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **movie_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **movie_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **movie_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.movie_id**
      * - `text` in database
      * - Nullable, no default
      */
      movie_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **movie_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'movie_videos_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season {
    export type Table = 'season';
    export interface Selectable {
      /**
      * **season.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **season.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **season.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index: number | null;
      /**
      * **season.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **season.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **season.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **season.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: Date | null;
      /**
      * **season.season_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      season_cast: string[] | null;
      /**
      * **season.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **season.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface JSONSelectable {
      /**
      * **season.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **season.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **season.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index: number | null;
      /**
      * **season.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **season.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **season.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **season.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: db.DateString | null;
      /**
      * **season.season_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      season_cast: string[] | null;
      /**
      * **season.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **season.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface Whereable {
      /**
      * **season.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.season_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      season_cast?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **season.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.season_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      season_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **season.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.index**
      * - `int4` in database
      * - Nullable, no default
      */
      index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.season_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      season_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season_genres_relation {
    export type Table = 'season_genres_relation';
    export interface Selectable {
      /**
      * **season_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_genres_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **season_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface JSONSelectable {
      /**
      * **season_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_genres_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **season_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface Whereable {
      /**
      * **season_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_genres_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **season_genres_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **season_genres_relation.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_genres_relation_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season_images {
    export type Table = 'season_images';
    export interface Selectable {
      /**
      * **season_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_images.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **season_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **season_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **season_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface JSONSelectable {
      /**
      * **season_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_images.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **season_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **season_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **season_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface Whereable {
      /**
      * **season_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_images.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **season_images.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **season_images.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_images_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season_licenses {
    export type Table = 'season_licenses';
    export interface Selectable {
      /**
      * **season_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_licenses.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **season_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: Date | null;
      /**
      * **season_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: Date | null;
    }
    export interface JSONSelectable {
      /**
      * **season_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_licenses.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **season_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: db.DateString | null;
      /**
      * **season_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: db.DateString | null;
    }
    export interface Whereable {
      /**
      * **season_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_licenses.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **season_licenses.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **season_licenses.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_licenses_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season_video_streams {
    export type Table = 'season_video_streams';
    export interface Selectable {
      /**
      * **season_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_video_streams.season_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      season_video_id: number | null;
      /**
      * **season_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **season_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **season_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **season_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **season_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **season_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **season_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **season_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **season_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **season_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **season_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **season_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **season_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **season_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **season_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **season_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **season_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface JSONSelectable {
      /**
      * **season_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_video_streams.season_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      season_video_id: number | null;
      /**
      * **season_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **season_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **season_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **season_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **season_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **season_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **season_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **season_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **season_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **season_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **season_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **season_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **season_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **season_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **season_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **season_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **season_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface Whereable {
      /**
      * **season_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.season_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      season_video_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.season_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      season_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.season_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      season_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_video_streams_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace season_videos {
    export type Table = 'season_videos';
    export interface Selectable {
      /**
      * **season_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_videos.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **season_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **season_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **season_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **season_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **season_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **season_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **season_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **season_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **season_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface JSONSelectable {
      /**
      * **season_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **season_videos.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id: string | null;
      /**
      * **season_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **season_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **season_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **season_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **season_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **season_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **season_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **season_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **season_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **season_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface Whereable {
      /**
      * **season_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **season_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **season_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **season_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **season_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.season_id**
      * - `text` in database
      * - Nullable, no default
      */
      season_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **season_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'season_videos_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow {
    export type Table = 'tvshow';
    export interface Selectable {
      /**
      * **tvshow.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tvshow.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **tvshow.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **tvshow.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **tvshow.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **tvshow.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: Date | null;
      /**
      * **tvshow.tvshow_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      tvshow_cast: string[] | null;
      /**
      * **tvshow.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **tvshow.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tvshow.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title: string | null;
      /**
      * **tvshow.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis: string | null;
      /**
      * **tvshow.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
      /**
      * **tvshow.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio: string | null;
      /**
      * **tvshow.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released: db.DateString | null;
      /**
      * **tvshow.tvshow_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      tvshow_cast: string[] | null;
      /**
      * **tvshow.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries: string[] | null;
      /**
      * **tvshow.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags: string[] | null;
    }
    export interface Whereable {
      /**
      * **tvshow.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.tvshow_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      tvshow_cast?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **tvshow.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.tvshow_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      tvshow_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **tvshow.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.original_title**
      * - `text` in database
      * - Nullable, no default
      */
      original_title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.synopsis**
      * - `text` in database
      * - Nullable, no default
      */
      synopsis?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.studio**
      * - `text` in database
      * - Nullable, no default
      */
      studio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.released**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      released?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.tvshow_cast**
      * - `_text` in database
      * - Nullable, no default
      */
      tvshow_cast?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.production_countries**
      * - `_text` in database
      * - Nullable, no default
      */
      production_countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow.tags**
      * - `_text` in database
      * - Nullable, no default
      */
      tags?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_genre {
    export type Table = 'tvshow_genre';
    export interface Selectable {
      /**
      * **tvshow_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tvshow_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no: number | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tvshow_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no: number | null;
    }
    export interface Whereable {
      /**
      * **tvshow_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **tvshow_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_genre.id**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **tvshow_genre.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_genre.order_no**
      * - `int4` in database
      * - Nullable, no default
      */
      order_no?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_genre_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_genres_relation {
    export type Table = 'tvshow_genres_relation';
    export interface Selectable {
      /**
      * **tvshow_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_genres_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **tvshow_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_genres_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id: string | null;
      /**
      * **tvshow_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no: number;
    }
    export interface Whereable {
      /**
      * **tvshow_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_genres_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_genres_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_genres_relation.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_genres_relation.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_genres_relation.tvshow_genre_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_genre_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_genres_relation.order_no**
      * - `int4` in database
      * - `NOT NULL`, default: `0`
      */
      order_no?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_genres_relation_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_images {
    export type Table = 'tvshow_images';
    export interface Selectable {
      /**
      * **tvshow_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_images.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **tvshow_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **tvshow_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **tvshow_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_images.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **tvshow_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path: string | null;
      /**
      * **tvshow_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **tvshow_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
    }
    export interface Whereable {
      /**
      * **tvshow_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_images.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_images.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_images.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_images.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_images.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_images.path**
      * - `text` in database
      * - Nullable, no default
      */
      path?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_images.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_images.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_images_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_licenses {
    export type Table = 'tvshow_licenses';
    export interface Selectable {
      /**
      * **tvshow_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_licenses.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **tvshow_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: Date | null;
      /**
      * **tvshow_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: Date | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_licenses.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries: string[] | null;
      /**
      * **tvshow_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time: db.DateString | null;
      /**
      * **tvshow_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time: db.DateString | null;
    }
    export interface Whereable {
      /**
      * **tvshow_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_licenses.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_licenses.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_licenses.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_licenses.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_licenses.countries**
      * - `_text` in database
      * - Nullable, no default
      */
      countries?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_licenses.start_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      start_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_licenses.end_time**
      * - `timestamptz` in database
      * - Nullable, no default
      */
      end_time?: (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (Date | db.DateString) | db.Parameter<(Date | db.DateString)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_licenses_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_video_streams {
    export type Table = 'tvshow_video_streams';
    export interface Selectable {
      /**
      * **tvshow_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_video_streams.tvshow_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      tvshow_video_id: number | null;
      /**
      * **tvshow_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **tvshow_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **tvshow_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **tvshow_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **tvshow_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **tvshow_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **tvshow_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **tvshow_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **tvshow_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **tvshow_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **tvshow_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **tvshow_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **tvshow_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **tvshow_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **tvshow_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **tvshow_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **tvshow_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_video_streams.tvshow_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      tvshow_video_id: number | null;
      /**
      * **tvshow_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label: string | null;
      /**
      * **tvshow_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id: string | null;
      /**
      * **tvshow_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format: string | null;
      /**
      * **tvshow_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv: string | null;
      /**
      * **tvshow_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file: string | null;
      /**
      * **tvshow_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code: string | null;
      /**
      * **tvshow_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps: number | null;
      /**
      * **tvshow_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type: c.VideoStreamTypeEnum | null;
      /**
      * **tvshow_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template: string | null;
      /**
      * **tvshow_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs: string | null;
      /**
      * **tvshow_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate: number | null;
      /**
      * **tvshow_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height: number | null;
      /**
      * **tvshow_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width: number | null;
      /**
      * **tvshow_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio: string | null;
      /**
      * **tvshow_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio: string | null;
      /**
      * **tvshow_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate: number | null;
      /**
      * **tvshow_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name: string | null;
    }
    export interface Whereable {
      /**
      * **tvshow_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.tvshow_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      tvshow_video_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.tvshow_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      tvshow_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_video_streams.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.tvshow_video_id**
      * - `int4` in database
      * - Nullable, no default
      */
      tvshow_video_id?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.label**
      * - `text` in database
      * - Nullable, no default
      */
      label?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.key_id**
      * - `text` in database
      * - Nullable, no default
      */
      key_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.format**
      * - `text` in database
      * - Nullable, no default
      */
      format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.iv**
      * - `text` in database
      * - Nullable, no default
      */
      iv?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.file**
      * - `text` in database
      * - Nullable, no default
      */
      file?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.language_code**
      * - `text` in database
      * - Nullable, no default
      */
      language_code?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.bitrate_in_kbps**
      * - `int4` in database
      * - Nullable, no default
      */
      bitrate_in_kbps?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.type**
      * - `video_stream_type_enum` (base type: `text`) in database
      * - Nullable, no default
      */
      type?: c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, c.VideoStreamTypeEnum | db.Parameter<c.VideoStreamTypeEnum> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.file_template**
      * - `text` in database
      * - Nullable, no default
      */
      file_template?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.codecs**
      * - `text` in database
      * - Nullable, no default
      */
      codecs?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.frame_rate**
      * - `numeric` in database
      * - Nullable, no default
      */
      frame_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.height**
      * - `int4` in database
      * - Nullable, no default
      */
      height?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.width**
      * - `int4` in database
      * - Nullable, no default
      */
      width?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.display_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      display_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.pixel_aspect_ratio**
      * - `text` in database
      * - Nullable, no default
      */
      pixel_aspect_ratio?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.sampling_rate**
      * - `int4` in database
      * - Nullable, no default
      */
      sampling_rate?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_video_streams.language_name**
      * - `text` in database
      * - Nullable, no default
      */
      language_name?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_video_streams_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace tvshow_videos {
    export type Table = 'tvshow_videos';
    export interface Selectable {
      /**
      * **tvshow_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_videos.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **tvshow_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **tvshow_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **tvshow_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **tvshow_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **tvshow_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **tvshow_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **tvshow_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **tvshow_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface JSONSelectable {
      /**
      * **tvshow_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id: number;
      /**
      * **tvshow_videos.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id: string | null;
      /**
      * **tvshow_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type: string | null;
      /**
      * **tvshow_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title: string | null;
      /**
      * **tvshow_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds: number | null;
      /**
      * **tvshow_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages: string[] | null;
      /**
      * **tvshow_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages: string[] | null;
      /**
      * **tvshow_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages: string[] | null;
      /**
      * **tvshow_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest: string | null;
      /**
      * **tvshow_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest: string | null;
      /**
      * **tvshow_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected: boolean | null;
      /**
      * **tvshow_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format: string | null;
    }
    export interface Whereable {
      /**
      * **tvshow_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tvshow_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tvshow_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tvshow_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tvshow_videos.id**
      * - `int4` in database
      * - `NOT NULL`, identity column
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.tvshow_id**
      * - `text` in database
      * - Nullable, no default
      */
      tvshow_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.type**
      * - `text` in database
      * - Nullable, no default
      */
      type?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.title**
      * - `text` in database
      * - Nullable, no default
      */
      title?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.length_in_seconds**
      * - `numeric` in database
      * - Nullable, no default
      */
      length_in_seconds?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.audio_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      audio_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.subtitle_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      subtitle_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.caption_languages**
      * - `_text` in database
      * - Nullable, no default
      */
      caption_languages?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.dash_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      dash_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.hls_manifest**
      * - `text` in database
      * - Nullable, no default
      */
      hls_manifest?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.is_protected**
      * - `bool` in database
      * - Nullable, no default
      */
      is_protected?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tvshow_videos.output_format**
      * - `text` in database
      * - Nullable, no default
      */
      output_format?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'tvshow_videos_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }

  export namespace video_stream_type {
    export type Table = 'video_stream_type';
    export interface Selectable {
      /**
      * **video_stream_type.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string;
      /**
      * **video_stream_type.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
    }
    export interface JSONSelectable {
      /**
      * **video_stream_type.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string;
      /**
      * **video_stream_type.description**
      * - `text` in database
      * - Nullable, no default
      */
      description: string | null;
    }
    export interface Whereable {
      /**
      * **video_stream_type.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **video_stream_type.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **video_stream_type.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **video_stream_type.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **video_stream_type.value**
      * - `text` in database
      * - `NOT NULL`, no default
      */
      value?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **video_stream_type.description**
      * - `text` in database
      * - Nullable, no default
      */
      description?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'video_stream_type_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = db.GenericSQLExpression | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Table | Whereable | Column;
    export type SQL = SQLExpression | SQLExpression[];
  }


  /* === schema: ax_utils === */

  /* --- enums --- */


  /* --- tables --- */



  /* === schema: public === */

  /* --- enums --- */


  /* --- tables --- */


  /* === cross-table types === */

  export type Table = collection.Table | collection_images.Table | collection_items_relation.Table | episode.Table | episode_genres_relation.Table | episode_images.Table | episode_licenses.Table | episode_video_streams.Table | episode_videos.Table | messaging_counter.Table | movie.Table | movie_genre.Table | movie_genres_relation.Table | movie_images.Table | movie_licenses.Table | movie_video_streams.Table | movie_videos.Table | season.Table | season_genres_relation.Table | season_images.Table | season_licenses.Table | season_video_streams.Table | season_videos.Table | tvshow.Table | tvshow_genre.Table | tvshow_genres_relation.Table | tvshow_images.Table | tvshow_licenses.Table | tvshow_video_streams.Table | tvshow_videos.Table | video_stream_type.Table;
  export type Selectable = collection.Selectable | collection_images.Selectable | collection_items_relation.Selectable | episode.Selectable | episode_genres_relation.Selectable | episode_images.Selectable | episode_licenses.Selectable | episode_video_streams.Selectable | episode_videos.Selectable | messaging_counter.Selectable | movie.Selectable | movie_genre.Selectable | movie_genres_relation.Selectable | movie_images.Selectable | movie_licenses.Selectable | movie_video_streams.Selectable | movie_videos.Selectable | season.Selectable | season_genres_relation.Selectable | season_images.Selectable | season_licenses.Selectable | season_video_streams.Selectable | season_videos.Selectable | tvshow.Selectable | tvshow_genre.Selectable | tvshow_genres_relation.Selectable | tvshow_images.Selectable | tvshow_licenses.Selectable | tvshow_video_streams.Selectable | tvshow_videos.Selectable | video_stream_type.Selectable;
  export type JSONSelectable = collection.JSONSelectable | collection_images.JSONSelectable | collection_items_relation.JSONSelectable | episode.JSONSelectable | episode_genres_relation.JSONSelectable | episode_images.JSONSelectable | episode_licenses.JSONSelectable | episode_video_streams.JSONSelectable | episode_videos.JSONSelectable | messaging_counter.JSONSelectable | movie.JSONSelectable | movie_genre.JSONSelectable | movie_genres_relation.JSONSelectable | movie_images.JSONSelectable | movie_licenses.JSONSelectable | movie_video_streams.JSONSelectable | movie_videos.JSONSelectable | season.JSONSelectable | season_genres_relation.JSONSelectable | season_images.JSONSelectable | season_licenses.JSONSelectable | season_video_streams.JSONSelectable | season_videos.JSONSelectable | tvshow.JSONSelectable | tvshow_genre.JSONSelectable | tvshow_genres_relation.JSONSelectable | tvshow_images.JSONSelectable | tvshow_licenses.JSONSelectable | tvshow_video_streams.JSONSelectable | tvshow_videos.JSONSelectable | video_stream_type.JSONSelectable;
  export type Whereable = collection.Whereable | collection_images.Whereable | collection_items_relation.Whereable | episode.Whereable | episode_genres_relation.Whereable | episode_images.Whereable | episode_licenses.Whereable | episode_video_streams.Whereable | episode_videos.Whereable | messaging_counter.Whereable | movie.Whereable | movie_genre.Whereable | movie_genres_relation.Whereable | movie_images.Whereable | movie_licenses.Whereable | movie_video_streams.Whereable | movie_videos.Whereable | season.Whereable | season_genres_relation.Whereable | season_images.Whereable | season_licenses.Whereable | season_video_streams.Whereable | season_videos.Whereable | tvshow.Whereable | tvshow_genre.Whereable | tvshow_genres_relation.Whereable | tvshow_images.Whereable | tvshow_licenses.Whereable | tvshow_video_streams.Whereable | tvshow_videos.Whereable | video_stream_type.Whereable;
  export type Insertable = collection.Insertable | collection_images.Insertable | collection_items_relation.Insertable | episode.Insertable | episode_genres_relation.Insertable | episode_images.Insertable | episode_licenses.Insertable | episode_video_streams.Insertable | episode_videos.Insertable | messaging_counter.Insertable | movie.Insertable | movie_genre.Insertable | movie_genres_relation.Insertable | movie_images.Insertable | movie_licenses.Insertable | movie_video_streams.Insertable | movie_videos.Insertable | season.Insertable | season_genres_relation.Insertable | season_images.Insertable | season_licenses.Insertable | season_video_streams.Insertable | season_videos.Insertable | tvshow.Insertable | tvshow_genre.Insertable | tvshow_genres_relation.Insertable | tvshow_images.Insertable | tvshow_licenses.Insertable | tvshow_video_streams.Insertable | tvshow_videos.Insertable | video_stream_type.Insertable;
  export type Updatable = collection.Updatable | collection_images.Updatable | collection_items_relation.Updatable | episode.Updatable | episode_genres_relation.Updatable | episode_images.Updatable | episode_licenses.Updatable | episode_video_streams.Updatable | episode_videos.Updatable | messaging_counter.Updatable | movie.Updatable | movie_genre.Updatable | movie_genres_relation.Updatable | movie_images.Updatable | movie_licenses.Updatable | movie_video_streams.Updatable | movie_videos.Updatable | season.Updatable | season_genres_relation.Updatable | season_images.Updatable | season_licenses.Updatable | season_video_streams.Updatable | season_videos.Updatable | tvshow.Updatable | tvshow_genre.Updatable | tvshow_genres_relation.Updatable | tvshow_images.Updatable | tvshow_licenses.Updatable | tvshow_video_streams.Updatable | tvshow_videos.Updatable | video_stream_type.Updatable;
  export type UniqueIndex = collection.UniqueIndex | collection_images.UniqueIndex | collection_items_relation.UniqueIndex | episode.UniqueIndex | episode_genres_relation.UniqueIndex | episode_images.UniqueIndex | episode_licenses.UniqueIndex | episode_video_streams.UniqueIndex | episode_videos.UniqueIndex | messaging_counter.UniqueIndex | movie.UniqueIndex | movie_genre.UniqueIndex | movie_genres_relation.UniqueIndex | movie_images.UniqueIndex | movie_licenses.UniqueIndex | movie_video_streams.UniqueIndex | movie_videos.UniqueIndex | season.UniqueIndex | season_genres_relation.UniqueIndex | season_images.UniqueIndex | season_licenses.UniqueIndex | season_video_streams.UniqueIndex | season_videos.UniqueIndex | tvshow.UniqueIndex | tvshow_genre.UniqueIndex | tvshow_genres_relation.UniqueIndex | tvshow_images.UniqueIndex | tvshow_licenses.UniqueIndex | tvshow_video_streams.UniqueIndex | tvshow_videos.UniqueIndex | video_stream_type.UniqueIndex;
  export type Column = collection.Column | collection_images.Column | collection_items_relation.Column | episode.Column | episode_genres_relation.Column | episode_images.Column | episode_licenses.Column | episode_video_streams.Column | episode_videos.Column | messaging_counter.Column | movie.Column | movie_genre.Column | movie_genres_relation.Column | movie_images.Column | movie_licenses.Column | movie_video_streams.Column | movie_videos.Column | season.Column | season_genres_relation.Column | season_images.Column | season_licenses.Column | season_video_streams.Column | season_videos.Column | tvshow.Column | tvshow_genre.Column | tvshow_genres_relation.Column | tvshow_images.Column | tvshow_licenses.Column | tvshow_video_streams.Column | tvshow_videos.Column | video_stream_type.Column;
  export type AllTables = [collection.Table, collection_images.Table, collection_items_relation.Table, episode.Table, episode_genres_relation.Table, episode_images.Table, episode_licenses.Table, episode_video_streams.Table, episode_videos.Table, messaging_counter.Table, movie.Table, movie_genre.Table, movie_genres_relation.Table, movie_images.Table, movie_licenses.Table, movie_video_streams.Table, movie_videos.Table, season.Table, season_genres_relation.Table, season_images.Table, season_licenses.Table, season_video_streams.Table, season_videos.Table, tvshow.Table, tvshow_genre.Table, tvshow_genres_relation.Table, tvshow_images.Table, tvshow_licenses.Table, tvshow_video_streams.Table, tvshow_videos.Table, video_stream_type.Table];
  export type AllMaterializedViews = [];


  export type SelectableForTable<T extends Table> = {
    collection: collection.Selectable;
    collection_images: collection_images.Selectable;
    collection_items_relation: collection_items_relation.Selectable;
    episode: episode.Selectable;
    episode_genres_relation: episode_genres_relation.Selectable;
    episode_images: episode_images.Selectable;
    episode_licenses: episode_licenses.Selectable;
    episode_video_streams: episode_video_streams.Selectable;
    episode_videos: episode_videos.Selectable;
    messaging_counter: messaging_counter.Selectable;
    movie: movie.Selectable;
    movie_genre: movie_genre.Selectable;
    movie_genres_relation: movie_genres_relation.Selectable;
    movie_images: movie_images.Selectable;
    movie_licenses: movie_licenses.Selectable;
    movie_video_streams: movie_video_streams.Selectable;
    movie_videos: movie_videos.Selectable;
    season: season.Selectable;
    season_genres_relation: season_genres_relation.Selectable;
    season_images: season_images.Selectable;
    season_licenses: season_licenses.Selectable;
    season_video_streams: season_video_streams.Selectable;
    season_videos: season_videos.Selectable;
    tvshow: tvshow.Selectable;
    tvshow_genre: tvshow_genre.Selectable;
    tvshow_genres_relation: tvshow_genres_relation.Selectable;
    tvshow_images: tvshow_images.Selectable;
    tvshow_licenses: tvshow_licenses.Selectable;
    tvshow_video_streams: tvshow_video_streams.Selectable;
    tvshow_videos: tvshow_videos.Selectable;
    video_stream_type: video_stream_type.Selectable;
  }[T];

  export type JSONSelectableForTable<T extends Table> = {
    collection: collection.JSONSelectable;
    collection_images: collection_images.JSONSelectable;
    collection_items_relation: collection_items_relation.JSONSelectable;
    episode: episode.JSONSelectable;
    episode_genres_relation: episode_genres_relation.JSONSelectable;
    episode_images: episode_images.JSONSelectable;
    episode_licenses: episode_licenses.JSONSelectable;
    episode_video_streams: episode_video_streams.JSONSelectable;
    episode_videos: episode_videos.JSONSelectable;
    messaging_counter: messaging_counter.JSONSelectable;
    movie: movie.JSONSelectable;
    movie_genre: movie_genre.JSONSelectable;
    movie_genres_relation: movie_genres_relation.JSONSelectable;
    movie_images: movie_images.JSONSelectable;
    movie_licenses: movie_licenses.JSONSelectable;
    movie_video_streams: movie_video_streams.JSONSelectable;
    movie_videos: movie_videos.JSONSelectable;
    season: season.JSONSelectable;
    season_genres_relation: season_genres_relation.JSONSelectable;
    season_images: season_images.JSONSelectable;
    season_licenses: season_licenses.JSONSelectable;
    season_video_streams: season_video_streams.JSONSelectable;
    season_videos: season_videos.JSONSelectable;
    tvshow: tvshow.JSONSelectable;
    tvshow_genre: tvshow_genre.JSONSelectable;
    tvshow_genres_relation: tvshow_genres_relation.JSONSelectable;
    tvshow_images: tvshow_images.JSONSelectable;
    tvshow_licenses: tvshow_licenses.JSONSelectable;
    tvshow_video_streams: tvshow_video_streams.JSONSelectable;
    tvshow_videos: tvshow_videos.JSONSelectable;
    video_stream_type: video_stream_type.JSONSelectable;
  }[T];

  export type WhereableForTable<T extends Table> = {
    collection: collection.Whereable;
    collection_images: collection_images.Whereable;
    collection_items_relation: collection_items_relation.Whereable;
    episode: episode.Whereable;
    episode_genres_relation: episode_genres_relation.Whereable;
    episode_images: episode_images.Whereable;
    episode_licenses: episode_licenses.Whereable;
    episode_video_streams: episode_video_streams.Whereable;
    episode_videos: episode_videos.Whereable;
    messaging_counter: messaging_counter.Whereable;
    movie: movie.Whereable;
    movie_genre: movie_genre.Whereable;
    movie_genres_relation: movie_genres_relation.Whereable;
    movie_images: movie_images.Whereable;
    movie_licenses: movie_licenses.Whereable;
    movie_video_streams: movie_video_streams.Whereable;
    movie_videos: movie_videos.Whereable;
    season: season.Whereable;
    season_genres_relation: season_genres_relation.Whereable;
    season_images: season_images.Whereable;
    season_licenses: season_licenses.Whereable;
    season_video_streams: season_video_streams.Whereable;
    season_videos: season_videos.Whereable;
    tvshow: tvshow.Whereable;
    tvshow_genre: tvshow_genre.Whereable;
    tvshow_genres_relation: tvshow_genres_relation.Whereable;
    tvshow_images: tvshow_images.Whereable;
    tvshow_licenses: tvshow_licenses.Whereable;
    tvshow_video_streams: tvshow_video_streams.Whereable;
    tvshow_videos: tvshow_videos.Whereable;
    video_stream_type: video_stream_type.Whereable;
  }[T];

  export type InsertableForTable<T extends Table> = {
    collection: collection.Insertable;
    collection_images: collection_images.Insertable;
    collection_items_relation: collection_items_relation.Insertable;
    episode: episode.Insertable;
    episode_genres_relation: episode_genres_relation.Insertable;
    episode_images: episode_images.Insertable;
    episode_licenses: episode_licenses.Insertable;
    episode_video_streams: episode_video_streams.Insertable;
    episode_videos: episode_videos.Insertable;
    messaging_counter: messaging_counter.Insertable;
    movie: movie.Insertable;
    movie_genre: movie_genre.Insertable;
    movie_genres_relation: movie_genres_relation.Insertable;
    movie_images: movie_images.Insertable;
    movie_licenses: movie_licenses.Insertable;
    movie_video_streams: movie_video_streams.Insertable;
    movie_videos: movie_videos.Insertable;
    season: season.Insertable;
    season_genres_relation: season_genres_relation.Insertable;
    season_images: season_images.Insertable;
    season_licenses: season_licenses.Insertable;
    season_video_streams: season_video_streams.Insertable;
    season_videos: season_videos.Insertable;
    tvshow: tvshow.Insertable;
    tvshow_genre: tvshow_genre.Insertable;
    tvshow_genres_relation: tvshow_genres_relation.Insertable;
    tvshow_images: tvshow_images.Insertable;
    tvshow_licenses: tvshow_licenses.Insertable;
    tvshow_video_streams: tvshow_video_streams.Insertable;
    tvshow_videos: tvshow_videos.Insertable;
    video_stream_type: video_stream_type.Insertable;
  }[T];

  export type UpdatableForTable<T extends Table> = {
    collection: collection.Updatable;
    collection_images: collection_images.Updatable;
    collection_items_relation: collection_items_relation.Updatable;
    episode: episode.Updatable;
    episode_genres_relation: episode_genres_relation.Updatable;
    episode_images: episode_images.Updatable;
    episode_licenses: episode_licenses.Updatable;
    episode_video_streams: episode_video_streams.Updatable;
    episode_videos: episode_videos.Updatable;
    messaging_counter: messaging_counter.Updatable;
    movie: movie.Updatable;
    movie_genre: movie_genre.Updatable;
    movie_genres_relation: movie_genres_relation.Updatable;
    movie_images: movie_images.Updatable;
    movie_licenses: movie_licenses.Updatable;
    movie_video_streams: movie_video_streams.Updatable;
    movie_videos: movie_videos.Updatable;
    season: season.Updatable;
    season_genres_relation: season_genres_relation.Updatable;
    season_images: season_images.Updatable;
    season_licenses: season_licenses.Updatable;
    season_video_streams: season_video_streams.Updatable;
    season_videos: season_videos.Updatable;
    tvshow: tvshow.Updatable;
    tvshow_genre: tvshow_genre.Updatable;
    tvshow_genres_relation: tvshow_genres_relation.Updatable;
    tvshow_images: tvshow_images.Updatable;
    tvshow_licenses: tvshow_licenses.Updatable;
    tvshow_video_streams: tvshow_video_streams.Updatable;
    tvshow_videos: tvshow_videos.Updatable;
    video_stream_type: video_stream_type.Updatable;
  }[T];

  export type UniqueIndexForTable<T extends Table> = {
    collection: collection.UniqueIndex;
    collection_images: collection_images.UniqueIndex;
    collection_items_relation: collection_items_relation.UniqueIndex;
    episode: episode.UniqueIndex;
    episode_genres_relation: episode_genres_relation.UniqueIndex;
    episode_images: episode_images.UniqueIndex;
    episode_licenses: episode_licenses.UniqueIndex;
    episode_video_streams: episode_video_streams.UniqueIndex;
    episode_videos: episode_videos.UniqueIndex;
    messaging_counter: messaging_counter.UniqueIndex;
    movie: movie.UniqueIndex;
    movie_genre: movie_genre.UniqueIndex;
    movie_genres_relation: movie_genres_relation.UniqueIndex;
    movie_images: movie_images.UniqueIndex;
    movie_licenses: movie_licenses.UniqueIndex;
    movie_video_streams: movie_video_streams.UniqueIndex;
    movie_videos: movie_videos.UniqueIndex;
    season: season.UniqueIndex;
    season_genres_relation: season_genres_relation.UniqueIndex;
    season_images: season_images.UniqueIndex;
    season_licenses: season_licenses.UniqueIndex;
    season_video_streams: season_video_streams.UniqueIndex;
    season_videos: season_videos.UniqueIndex;
    tvshow: tvshow.UniqueIndex;
    tvshow_genre: tvshow_genre.UniqueIndex;
    tvshow_genres_relation: tvshow_genres_relation.UniqueIndex;
    tvshow_images: tvshow_images.UniqueIndex;
    tvshow_licenses: tvshow_licenses.UniqueIndex;
    tvshow_video_streams: tvshow_video_streams.UniqueIndex;
    tvshow_videos: tvshow_videos.UniqueIndex;
    video_stream_type: video_stream_type.UniqueIndex;
  }[T];

  export type ColumnForTable<T extends Table> = {
    collection: collection.Column;
    collection_images: collection_images.Column;
    collection_items_relation: collection_items_relation.Column;
    episode: episode.Column;
    episode_genres_relation: episode_genres_relation.Column;
    episode_images: episode_images.Column;
    episode_licenses: episode_licenses.Column;
    episode_video_streams: episode_video_streams.Column;
    episode_videos: episode_videos.Column;
    messaging_counter: messaging_counter.Column;
    movie: movie.Column;
    movie_genre: movie_genre.Column;
    movie_genres_relation: movie_genres_relation.Column;
    movie_images: movie_images.Column;
    movie_licenses: movie_licenses.Column;
    movie_video_streams: movie_video_streams.Column;
    movie_videos: movie_videos.Column;
    season: season.Column;
    season_genres_relation: season_genres_relation.Column;
    season_images: season_images.Column;
    season_licenses: season_licenses.Column;
    season_video_streams: season_video_streams.Column;
    season_videos: season_videos.Column;
    tvshow: tvshow.Column;
    tvshow_genre: tvshow_genre.Column;
    tvshow_genres_relation: tvshow_genres_relation.Column;
    tvshow_images: tvshow_images.Column;
    tvshow_licenses: tvshow_licenses.Column;
    tvshow_video_streams: tvshow_video_streams.Column;
    tvshow_videos: tvshow_videos.Column;
    video_stream_type: video_stream_type.Column;
  }[T];

  export type SQLForTable<T extends Table> = {
    collection: collection.SQL;
    collection_images: collection_images.SQL;
    collection_items_relation: collection_items_relation.SQL;
    episode: episode.SQL;
    episode_genres_relation: episode_genres_relation.SQL;
    episode_images: episode_images.SQL;
    episode_licenses: episode_licenses.SQL;
    episode_video_streams: episode_video_streams.SQL;
    episode_videos: episode_videos.SQL;
    messaging_counter: messaging_counter.SQL;
    movie: movie.SQL;
    movie_genre: movie_genre.SQL;
    movie_genres_relation: movie_genres_relation.SQL;
    movie_images: movie_images.SQL;
    movie_licenses: movie_licenses.SQL;
    movie_video_streams: movie_video_streams.SQL;
    movie_videos: movie_videos.SQL;
    season: season.SQL;
    season_genres_relation: season_genres_relation.SQL;
    season_images: season_images.SQL;
    season_licenses: season_licenses.SQL;
    season_video_streams: season_video_streams.SQL;
    season_videos: season_videos.SQL;
    tvshow: tvshow.SQL;
    tvshow_genre: tvshow_genre.SQL;
    tvshow_genres_relation: tvshow_genres_relation.SQL;
    tvshow_images: tvshow_images.SQL;
    tvshow_licenses: tvshow_licenses.SQL;
    tvshow_video_streams: tvshow_video_streams.SQL;
    tvshow_videos: tvshow_videos.SQL;
    video_stream_type: video_stream_type.SQL;
  }[T];

}
