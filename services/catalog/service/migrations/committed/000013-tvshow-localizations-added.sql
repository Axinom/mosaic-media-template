--! Previous: sha1:429f0e899d5db07d9e0acd1232eaa929b17a6832
--! Hash: sha1:70d257dd2762855775713a0331d6d5cac66c5d7c
--! Message: tvshow-localizations-added

-- Tvshows
CREATE TABLE IF NOT EXISTS app_public.tvshow_localizations(
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  tvshow_id TEXT REFERENCES tvshow ON DELETE CASCADE,
  locale TEXT NOT NULL,
  is_default_locale BOOLEAN NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  synopsis TEXT
);

SELECT ax_define.define_index('tvshow_id', 'tvshow_localizations', 'app_public');
SELECT ax_define.define_index('locale', 'tvshow_localizations', 'app_public');

-- Migrate values for the default locale into the table.
DO $$ BEGIN
  IF ax_define.column_exists('title', 'tvshow', 'app_public') THEN
    INSERT INTO app_public.tvshow_localizations
    (tvshow_id, title, description, synopsis, locale, is_default_locale)
    SELECT t.id, t.title, t.description, t.synopsis, ':DEFAULT_LOCALE_TAG', true
    FROM app_public.tvshow t
    ON CONFLICT DO NOTHING;
  END IF;
END $$;

ALTER TABLE app_public.tvshow DROP COLUMN IF EXISTS title;
ALTER TABLE app_public.tvshow DROP COLUMN IF EXISTS description;
ALTER TABLE app_public.tvshow DROP COLUMN IF EXISTS synopsis;

GRANT SELECT, INSERT, UPDATE, DELETE ON app_public.tvshow_localizations TO ":DATABASE_GQL_ROLE";

-- Tvshow Genres
CREATE TABLE IF NOT EXISTS app_public.tvshow_genre_localizations(
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  tvshow_genre_id TEXT REFERENCES tvshow_genre ON DELETE CASCADE,
  locale TEXT NOT NULL,
  is_default_locale BOOLEAN NOT NULL,
  title TEXT NOT NULL
);

SELECT ax_define.define_index('tvshow_genre_id', 'tvshow_genre_localizations', 'app_public');
SELECT ax_define.define_index('locale', 'tvshow_genre_localizations', 'app_public');

-- Migrate values for the default locale into the table.
DO $$ BEGIN
  IF ax_define.column_exists('title', 'tvshow_genre', 'app_public') THEN
    INSERT INTO app_public.tvshow_genre_localizations
    (tvshow_genre_id, title, locale, is_default_locale)
    SELECT g.id, g.title, ':DEFAULT_LOCALE_TAG', true
    FROM app_public.tvshow_genre g
    ON CONFLICT DO NOTHING;
  END IF;
END $$;

ALTER TABLE app_public.tvshow_genre DROP COLUMN IF EXISTS title;

GRANT SELECT, INSERT, UPDATE, DELETE ON app_public.tvshow_genre_localizations TO ":DATABASE_GQL_ROLE";

-- Seasons
CREATE TABLE IF NOT EXISTS app_public.season_localizations(
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  season_id TEXT REFERENCES season ON DELETE CASCADE,
  locale TEXT NOT NULL,
  is_default_locale BOOLEAN NOT NULL,
  description TEXT,
  synopsis TEXT
);

SELECT ax_define.define_index('season_id', 'season_localizations', 'app_public');
SELECT ax_define.define_index('locale', 'season_localizations', 'app_public');

-- Migrate values for the default locale into the table.
DO $$ BEGIN
  IF ax_define.column_exists('description', 'season', 'app_public') THEN
    INSERT INTO app_public.season_localizations
    (season_id, description, synopsis, locale, is_default_locale)
    SELECT s.id, s.description, s.synopsis, ':DEFAULT_LOCALE_TAG', true
    FROM app_public.season s
    ON CONFLICT DO NOTHING;
  END IF;
END $$;

ALTER TABLE app_public.season DROP COLUMN IF EXISTS description;
ALTER TABLE app_public.season DROP COLUMN IF EXISTS synopsis;

GRANT SELECT, INSERT, UPDATE, DELETE ON app_public.season_localizations TO ":DATABASE_GQL_ROLE";

-- Episodes
CREATE TABLE IF NOT EXISTS app_public.episode_localizations(
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  episode_id TEXT REFERENCES episode ON DELETE CASCADE,
  locale TEXT NOT NULL,
  is_default_locale BOOLEAN NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  synopsis TEXT
);

SELECT ax_define.define_index('episode_id', 'episode_localizations', 'app_public');
SELECT ax_define.define_index('locale', 'episode_localizations', 'app_public');

-- Migrate values for the default locale into the table.
DO $$ BEGIN
  IF ax_define.column_exists('title', 'episode', 'app_public') THEN
    INSERT INTO app_public.episode_localizations
    (episode_id, title, description, synopsis, locale, is_default_locale)
    SELECT e.id, e.title, e.description, e.synopsis, ':DEFAULT_LOCALE_TAG', true
    FROM app_public.episode e
    ON CONFLICT DO NOTHING;
  END IF;
END $$;

ALTER TABLE app_public.episode DROP COLUMN IF EXISTS title;
ALTER TABLE app_public.episode DROP COLUMN IF EXISTS description;
ALTER TABLE app_public.episode DROP COLUMN IF EXISTS synopsis;

GRANT SELECT, INSERT, UPDATE, DELETE ON app_public.episode_localizations TO ":DATABASE_GQL_ROLE";

-- Collections
CREATE TABLE IF NOT EXISTS app_public.collection_localizations(
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  collection_id TEXT REFERENCES collection ON DELETE CASCADE,
  locale TEXT NOT NULL,
  is_default_locale BOOLEAN NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  synopsis TEXT
);

SELECT ax_define.define_index('collection_id', 'collection_localizations', 'app_public');
SELECT ax_define.define_index('locale', 'collection_localizations', 'app_public');

-- Migrate values for the default locale into the table.
DO $$ BEGIN
  IF ax_define.column_exists('title', 'collection', 'app_public') THEN
    INSERT INTO app_public.collection_localizations
    (collection_id, title, description, synopsis, locale, is_default_locale)
    SELECT c.id, c.title, c.description, c.synopsis, ':DEFAULT_LOCALE_TAG', true
    FROM app_public.collection c
    ON CONFLICT DO NOTHING;
  END IF;
END $$;

ALTER TABLE app_public.collection DROP COLUMN IF EXISTS title;
ALTER TABLE app_public.collection DROP COLUMN IF EXISTS description;
ALTER TABLE app_public.collection DROP COLUMN IF EXISTS synopsis;

GRANT SELECT, INSERT, UPDATE, DELETE ON app_public.collection_localizations TO ":DATABASE_GQL_ROLE";
